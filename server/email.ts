import { Resend } from 'resend';
import { GeneratedRecipe } from './gemini';

// Initialize Resend with the API key
const resend = new Resend(process.env.RESEND_API_KEY);

interface RecipeEmailData {
  recipe: Partial<GeneratedRecipe>;
  recipientEmail: string;
}

/**
 * Send a recipe via email using Resend
 */
export async function sendRecipeEmail({ recipe, recipientEmail }: RecipeEmailData): Promise<boolean> {
  if (!process.env.RESEND_API_KEY) {
    console.error('Missing RESEND_API_KEY environment variable.');
    return false;
  }
  
  if (!recipe || !recipe.title) {
    console.error('Cannot send email: Recipe data is incomplete');
    return false;
  }
  
  try {
    // Create HTML content for the email
    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h1 style="color: #4a5568;">${recipe.title}</h1>
        
        ${recipe.description ? `<p style="color: #4a5568; margin-bottom: 20px;">${recipe.description}</p>` : ''}
        
        <div style="margin-bottom: 20px;">
          <h2 style="color: #2d3748;">Ingredients</h2>
          <div style="white-space: pre-line; color: #4a5568;">
            ${recipe.ingredients ? recipe.ingredients : 'Ingredients not available'}
          </div>
        </div>
        
        <div style="margin-bottom: 20px;">
          <h2 style="color: #2d3748;">Instructions</h2>
          <div style="white-space: pre-line; color: #4a5568;">
            ${recipe.instructions ? recipe.instructions : 'Instructions not available'}
          </div>
        </div>
        
        <div style="margin-top: 30px; font-size: 14px; color: #718096;">
          <p>Meal Type: ${recipe.mealType || 'N/A'}</p>
          <p>Prep Time: ${recipe.prepTime ? `${recipe.prepTime} minutes` : 'N/A'}</p>
          <p>Servings: ${recipe.servings || 'N/A'}</p>
        </div>
        
        <p style="margin-top: 30px; font-size: 12px; color: #a0aec0;">
          This recipe was generated by Chef Pierre's AI Recipe Generator. Enjoy your cooking!
        </p>
      </div>
    `;
    
    // Send email using Resend
    const { data, error } = await resend.emails.send({
      from: 'Chef Pierre <noreply@resend.dev>',
      to: [recipientEmail],
      subject: `Recipe: ${recipe.title}`,
      html: htmlContent,
      text: `${recipe.title}\n\n${recipe.description || ''}\n\nIngredients:\n${recipe.ingredients || 'Not available'}\n\nInstructions:\n${recipe.instructions || 'Not available'}\n\nMeal Type: ${recipe.mealType || 'N/A'}\nPrep Time: ${recipe.prepTime ? `${recipe.prepTime} minutes` : 'N/A'}\nServings: ${recipe.servings || 'N/A'}\n\nThis recipe was generated by Chef Pierre's AI Recipe Generator. Enjoy your cooking!`,
    });
    
    if (error) {
      console.error('Error sending email with Resend:', error);
      return false;
    }
    
    console.log('Email sent successfully with Resend:', data?.id);
    return true;
  } catch (error) {
    console.error('Error sending email:', error);
    return false;
  }
}

/**
 * Send a test email to verify configuration
 */
export async function sendTestEmail(recipientEmail: string): Promise<boolean> {
  if (!process.env.RESEND_API_KEY) {
    console.error('Missing RESEND_API_KEY environment variable.');
    return false;
  }
  
  try {
    // Send email using Resend
    const { data, error } = await resend.emails.send({
      from: 'Chef Pierre <noreply@resend.dev>',
      to: [recipientEmail],
      subject: 'Test Email from Chef Pierre',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h1 style="color: #4a5568;">Your email is working!</h1>
          <p style="color: #4a5568;">This is a test email from Chef Pierre's Recipe Generator.</p>
          <p style="color: #4a5568;">Now you can receive delicious recipes directly in your inbox!</p>
        </div>
      `,
      text: 'Your email is working! This is a test email from Chef Pierre\'s Recipe Generator. Now you can receive delicious recipes directly in your inbox!',
    });
    
    if (error) {
      console.error('Error sending test email with Resend:', error);
      return false;
    }
    
    console.log('Test email sent successfully with Resend:', data?.id);
    return true;
  } catch (error) {
    console.error('Error sending test email:', error);
    return false;
  }
}